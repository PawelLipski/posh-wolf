
<h1> The architecture of this system </h1>

<table width="100%">

<tr>
  <td colspan="4" align="center" style="padding-bottom: 30px; padding-top: 30px">
    <table width="90%"> <tr>
      <td class="mod-hdr"> Client-side </td>
      <td class="prot-hdr"> 
        <% img = image_tag "/assets/arrows.gif", width: 60, height: 60 %> 
        <%= img %>
        AJAX 
      </td>
      <td class="mod-hdr"> Web app </td>
      <td class="prot-hdr"> 
        <%= img %>
        SOAP 
      </td>
      <td class="mod-hdr"> Web service </td>
      <td class="prot-hdr"> 
        <%= img %>
        (directly)
      </td>
      <td class="mod-hdr"> Back-end </td>
    </tr> </table>
  </td>
</tr>

<tr>
  <td class="mod-descr">
  Web interface for task scheduling and visualization of flow shop execution.
  Connects to the web application mainly via <b>AJAX</b> requests.
  Uses <b>jQuery</b> and <b>Twitter Bootstrap</b>.
  </td>

  <td class="mod-descr">
  Web app built with <b>Ruby on Rails</b>.
  Handles requests from browsers wrapping them in <b>SOAP</b> envelope (through the use of <b>Savon</b> gem) and passes to the web service.
  Deployed to the <b>Heroku</b> cloud. Running on the <b>Unicorn</b> server to handle multiple HTTP requests simultaneously. 
  Traffic stats are collected with <b>Google Analytics</b>. <br>
  Bartosz Janota developed automated web tests with <b>Selenium WebDriver</b>. 
  The suite is publicly available at <%= link_to "Bitbucket", "https://bitbucket.org/bartexki/poshwolftest" %> 
  and ready to launch with a single <tt>mvn test</tt>.
  </td> 

  <td class="mod-descr"> 
  <b>SOAP web service</b>, implemented in <b>Scala</b> with <b>JAX-WS</b>. 
  Offers Web API, which enables enqueueing flow shop tasks, 
  checking progress and partial results for ongoing tasks and retrieving result for the complete ones. 
  Employs Scala <b>actors</b> to implement asynchronous task scheduling and execution. 
  Hosted on <b>Heroku</b> cloud (at posh-wolf-ws.herokuapp.com).
  </td>

  <td class="mod-descr"> 
  <b>Cuckoo search algorithm</b> implemented in <b>Java</b> by Aleksander Książek and Przemysław Burczyk.
  A detailed description may be found <%= link_to "here", "algorithm" %>.
  Thanks to Java/Scala bytecode compatibility, back-end is simply stored as a part of the web service.
  </td> 
</tr>

<tr> 
  <td colspan="2" align="center">
    <h4> <%= link_to "Front-end sources at GitHub", "/webapp-src" %> </h4>
  </td>
  <td colspan="2" align="center">
    <h4> <%= link_to "WS & back-end sources at GitHub", "/ws-src" %> </h4>
  </td>
</tr>

</table>

