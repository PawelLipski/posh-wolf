
<h1> ## The web application albo moze: GENERAL??? </h1>

<p class="doc"> This application is a semestral project for Operational Research, a ## third-grade subject in ## 
Computer Science, Faculty of ###, AGH University of Science and Technology in Cracow, Poland. 
Its ##purpose is to experiment with Cuckoo algorithm as a way to solve flow shop problem
and to provide a friendly ### demonstration of the flow shop execution. </p>

<table width="100%">

<tr>
  <td colspan="4" align="center">
    <table width="90%"> <tr>
      <td class="mod-hdr">Client-side (browser) </td>
      <td width="11%"> <font color="gray"> <h3> AJAX </h3> </td>
      <td class="mod-hdr"> Webapp </td>
      <td width="11%"> <font color="gray"> <h3> SOAP </h3> </td>
      <td class="mod-hdr"> Web service </td>
      <td width="11%"> <font color="gray"> <h3> Direct access </h3> </td>
      <td class="mod-hdr"> Back-end </td>
    </tr> </table>
  </td>
</tr>

<tr>
  <td width="25%">
  Web interface for visualization of flow shop problem instances. Uses jQuery and Twitter Bootstrap.
  </td>
  <td width="25%"> 
  Web app built with Ruby on Rails. Based mainly on AJAX.
  Handles requests from browsers wrapping them in SOAP envelope (with Savon gem) and passes to the web service.
  Deployed ###ON Heroku cloud, running on Unicorn ##web server to enable ## handle requests simultaneously. 
  </td> 

  <td width="25%"> 
  SOAP web service, implemented in Scala ## with JAX-WS. ## Employs Scala actors ## for ## asynchronous task scheduling and execution. 
  ## Publishes!!! web API, which enables enqueueing flow shop tasks, checking progress and partial results for ongoing tasks and retrieving result for complete tasks. 
  Hosted ###ON Heroku cloud. 
  </td>

  <td width="25%"> 
  Cuckoo algorithm implemented in Java by Aleksander Książek and Przemysław Burczyk. 
  A detailed description may be found <%= link_to "here", "algorithm" %>. 
  </td> 
</tr>

</table>

