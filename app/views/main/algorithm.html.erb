
<h1> Cuckoo algorithm for the Flow Shop problem </h1>

<p class="doc"> We solve the problem by the means of optimization algorithm known as cuckoo search, elaborated by ###CHK TODOODODODODO!!! Xin-She Yang and Suash Deb in 2009.
#By assumption, it represents ##brood behavior of cuckoos. Candidate solutions are represented by eggs, located in nests. In the basic version of the algorithm #employed #for this #problem, each nest keeps at most one egg. Who provide new candidates are the cuckoos, each of them remembers one solution instance.
</p>

<p class="doc">
As soon as initial nest##(nests?) and cuckoos population is randomized, optimization process starts. In every iteration a single cuckoo is randomly chosen and its solution is modified in a random way. Various strategies are employed #to modification. Yang and Deb prove in their article that the optimal one are so-called L#kreska!#evy flights, but we did not follow this path due to implementational difficulties. Posh Wolf uses simple random walk instead - a modified egg (solution) is placed in a randomly chosen nest, if only it #super the egg that was placed there before.
At the end of each iteration, a number of the worst solution candidates is removed and substituted with randomly generated ones.
</p>

<p class="doc">
Solution quality is estimated using a #target function - and in the case of flow shop problem it is the total #sprawdzic, czy to jest ok# execution timespan. The algorithm aims, of course, to minimize this time, i.e. to minimize the time that passes between the first job starts and the very last jobs completes.
</p>

<p class="doc">
The general outline of algorithm, as proposed by Yang &amp; Deb, is as follows:
</p>

TODO: moze sie da jakos skopiowac??? + ladny syntax!
